{
  "Duvidas": {
    "Qual o comando yarn para instalar dependência de desenvolvimento apenas?":"yarn add --dev",
    "Componente de classe está deprecated?":"Mais ou menos. Projetos novos não usam mais classes, mas os antigos podem continuar, eventualmente as classes vão desaparecer.",
    "Por que aprender classes se elas estão quase legadas?":"Pra manter código legado. A única outra exceção é tratar error boundaries.",
    "O que é escopo léxico?":"É quando acessamos o escopo usando keywords como this.",
    "Qual é o fluxo de dados do react?":"Unidirecional, do parent para os children",
    "Os lifecycles como componentwillreceiveprops, e outros, estão deprecados?":"Sim",
    "Prop.types está deprecado. O que foi lançado pra substituir?":"Os devs usam typescript interface pra substituir o prop types do react. Mas o pacote proptypes que foi deprecado foi descolado do react padrão, e agora precisa ser instalado a parte. yarn add prop-types. A sintaxe também mudou segue a documentação de como usar agora: https://reactjs.org/docs/typechecking-with-proptypes.html",
    "O typescript muda a forma como a gente escreve JS ?": "Um pouco. JS puro tem mais cara de orientado a objetos, e programação funcional. Typescript é mais orientado a objetos.",
    "Qual a sintaxe correta pra acessar o estado com class components?":"No functional components a gente acessa direto. No class é assim: value={this.state.value}",
    "O que são controled components?":"São componentes que a gente usa onChange + state pra gerenciar o estado.",
    "O que são uncontroled components?":"É quando ao invés de usar onChange + state, a gente deixa como um elemento html puro. Exemplo: <input /> desta forma o html gerencia o estado no proprio input. Mas a gente não consegue acessar o target.value dele.",
    "Como criar um uncontroled component que tenha valor inicial?":"usando a prop do html defaultValue. Dificilmente vais usar. Mas é assim. ",
    "O que substituiu o 'use strict' do react antigo?":"A tag React.StrictMode. Agora vc usa ela uma vez só no index.js ao invés de escrever ela no topo de todos os arquivos",
    "Como funciona a arquitetura de componentes e paginas quando usamos class components?":"Geralmente a página contém o estado + Os componentes são funcionais.",
    "O que é um componente statefull vs stateless?":"Stateful: Tem estado sendo gerenciado nele. Stateless: O oposto.",
    "O que são container components?":"São os componentes stateful.",
    "O que são presentational components?":"São os componentes stateless. Eles servem apenas para representar as props na ui. Não manipulam estado. ",
    "O que são smart e dumb components?":"smart = são statefull então gerenciam estado. dumb = o oposto.",
    "Quais as etapas pra dispor dados dinâmicos de uma api na tela?":"1-Na documentação da api copia a url que você vai usar no insomnia. 2-Faz requisição teste no insomnia. 3-Copia o model de dados retornado da api. 4-Cola isso dentro do objeto de estado do seu frontend. 5-Deixa temporariamente os dados mockados que vieram da requisição feita pelo insomnia dentro do seu estado. 6-Consome de forma dinâmica já usando o nome dos campos certos. 7-Substitui os dados mockados pelos dados buscados da api. (neste momento seu front precisa estar componentizado, passando as props/usando redux, os componentes devem ter seus filters, maps criados. Também é necessário já ter criadas as funções helpers que vão tratar os dados no front .",
    "Chamar uma api com ajax está deprecated?":"Não, porque ajax é o tipo de biblioteca. Temos a biblioteca ajax, com nome ajax. E temos outras que tb são ajax, como o axios, jquery ajax e o fetch",
    "Onde eu faço as minhas requisições ajax?":"classes: componentDidMount. functions: useEffect ",
    "Como funcionam funções IIFE em javascript?":"é uma função em JavaScript que é executada assim que definida. O objetivo dela é criar uma function closure",
    "Pra que serve uma function closure?":"É uma função com funcionalidade disponível apenas naquele escopo dela, e que as variáveis não estão visíveis globalmente.",
    "Por que os devs usam closures?":"A ideia é poder ter varios scripts sem que eles interfiram um no outro, mesmo que eles tenham variáveis com nomes parecidos, com clouse a gente cria um escopo de métodos e variáveis que só estão disponíveis para a própria closure. O padrão de closures é muito utilizado ao fazer loops"
  },
  "Outros": {
    "Na vida real, porque configurar o webpack e todo o boilerplate na mão, se a gente pode usar create-react-app, e outros clis?":"",
    "Posso fazer meu react app com create-react-app, e depois buildar ele direto conforme fala a documentação ou precisa fazer de outra forma?":"",
    "Como usar configurar e default props no meu componente?":"",
    "Como ter pleno domínio dos 3 lifecycles usando useEffect?":"",
    "Qual o sentido de aprender a manipular o dom diretamente com JS, se em produção usamos apenas react, e outros frameworks que não permitem isso?":"",
    "Como implementar currying, compose de programação funcional no meu projeto react?":"",
    "O que faz o hook useLayoutEffect?":"Ele mede o tamanho do layout."
  },
  "Not related": {
    "Enquete: Onde hospedar node.js?":"Vultr/heroku",
    "Enquete: Onde hospedar mongoDB?":"Atlas",
    "Como hospedar mongoDB na digital ocean? Vale a pena?":"",
    "Como hospedar node.js na digital ocean? Vale a pena?":"",
    "Como conectar front, back e banco em produção? (MERN)":"",
    "O vue.js é escrito com classes ou hooks?": ""
  }
}